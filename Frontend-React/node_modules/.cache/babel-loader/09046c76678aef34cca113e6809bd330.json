{"ast":null,"code":"import { PERSONAL_INFO, ABILITIES, SKILLS, PENDING_FALSE, PENDING_TRUE, EVENTS } from \"../actions/action\";\nconst initState = {\n  personalInfo: {},\n  abilities: [],\n  skills: [],\n  events: []\n};\n\nconst Reducer = (state = initState, action) => {\n  if (action.type === PERSONAL_INFO) {\n    return { ...state,\n      personalInfo: action.personalInfo\n    };\n  } else if (action.type === ABILITIES) {\n    return { ...state,\n      abilities: action.abilities\n    };\n  } else if (action.type === SKILLS) {\n    return { ...state,\n      skills: action.skills\n    };\n  } else if (action.type === EVENTS) {\n    return { ...state,\n      events: action.events\n    };\n  } else {\n    return { ...state\n    };\n  }\n};\n\nexport default Reducer;","map":{"version":3,"sources":["/Volumes/STORAGE/GitHub/portfolio-site/Frontend-React/src/reducers/reducer.js"],"names":["PERSONAL_INFO","ABILITIES","SKILLS","PENDING_FALSE","PENDING_TRUE","EVENTS","initState","personalInfo","abilities","skills","events","Reducer","state","action","type"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,aAA1C,EAAyDC,YAAzD,EAAuEC,MAAvE,QAAoF,mBAApF;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE,EADA;AAEdC,EAAAA,SAAS,EAAE,EAFG;AAGdC,EAAAA,MAAM,EAAE,EAHM;AAIdC,EAAAA,MAAM,EAAE;AAJM,CAAlB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoBO,MAApB,KAA+B;AAC3C,MAAIA,MAAM,CAACC,IAAP,KAAgBd,aAApB,EAAmC;AAC/B,WAAO,EAAC,GAAGY,KAAJ;AAAWL,MAAAA,YAAY,EAAEM,MAAM,CAACN;AAAhC,KAAP;AACH,GAFD,MAEO,IAAIM,MAAM,CAACC,IAAP,KAAgBb,SAApB,EAA+B;AAClC,WAAO,EAAC,GAAGW,KAAJ;AAAWJ,MAAAA,SAAS,EAAEK,MAAM,CAACL;AAA7B,KAAP;AACH,GAFM,MAEA,IAAIK,MAAM,CAACC,IAAP,KAAgBZ,MAApB,EAA4B;AAC/B,WAAO,EAAC,GAAGU,KAAJ;AAAWH,MAAAA,MAAM,EAAEI,MAAM,CAACJ;AAA1B,KAAP;AACH,GAFM,MAEA,IAAII,MAAM,CAACC,IAAP,KAAgBT,MAApB,EAA4B;AAC/B,WAAO,EAAC,GAAGO,KAAJ;AAAWF,MAAAA,MAAM,EAAEG,MAAM,CAACH;AAA1B,KAAP;AACH,GAFM,MAEA;AACH,WAAO,EAAC,GAAGE;AAAJ,KAAP;AACH;AACJ,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["import {PERSONAL_INFO, ABILITIES, SKILLS, PENDING_FALSE, PENDING_TRUE, EVENTS} from \"../actions/action\";\n\nconst initState = {\n    personalInfo: {},\n    abilities: [],\n    skills: [],\n    events: []\n};\n\nconst Reducer = (state = initState, action) => {\n    if (action.type === PERSONAL_INFO) {\n        return {...state, personalInfo: action.personalInfo}\n    } else if (action.type === ABILITIES) {\n        return {...state, abilities: action.abilities}\n    } else if (action.type === SKILLS) {\n        return {...state, skills: action.skills}\n    } else if (action.type === EVENTS) {\n        return {...state, events: action.events}\n    } else {\n        return {...state}\n    }\n};\n\nexport default Reducer;\n"]},"metadata":{},"sourceType":"module"}