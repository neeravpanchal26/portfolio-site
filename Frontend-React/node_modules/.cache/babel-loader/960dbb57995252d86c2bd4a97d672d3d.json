{"ast":null,"code":"var _jsxFileName = \"/Volumes/STORAGE/GitHub/portfolio-site/Frontend-React/src/containers/portfolio/portfolio.js\";\n// Default imports\nimport React, { Component } from 'react'; // Custom imports\n\nimport axios from 'axios';\nimport './portfolio.css';\nimport Nav from '../navbar/navbar';\nimport { GoGitBranch } from \"react-icons/go\";\nimport { connect } from 'react-redux';\nimport * as personalInfo from '../../actions/action';\nimport Footer from \"../../components/footer/footer\";\nimport Loader from \"../../components/loader/loader\";\n\nclass Portfolio extends Component {\n  // default constructor\n  constructor() {\n    super();\n\n    this.renderLoader = () => {\n      if (this.state.loader) {\n        return /*#__PURE__*/React.createElement(Loader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.renderRepos = () => {\n      return this.state.gitData.reverse().map(repo =>\n      /*#__PURE__*/\n      // Html build here\n      React.createElement(\"div\", {\n        className: \"card hoverable large\",\n        id: repo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: repo.html_url,\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, repo.name), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"more_vert\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"blue-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, repo.language), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      }, \" \\u2022 Latest commit at: \", new Date(repo.pushed_at).toUTCString().slice(0, 25)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, repo.default_branch, /*#__PURE__*/React.createElement(GoGitBranch, {\n        size: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-reveal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, repo.description))));\n    };\n\n    this.state = {\n      gitData: [],\n      loader: true\n    };\n  }\n\n  // Form load\n  componentDidMount() {\n    const {\n      gitApiLink\n    } = this.props.personalInfo; // Get data from github api here\n\n    axios.get(gitApiLink).then(data => this.setState({\n      gitData: data.data,\n      loader: false\n    })).catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // HTML here\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }), this.renderLoader(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, \"My Projects\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }), this.renderRepos(), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      })))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n}; // Default export\n\n\nexport default connect(mapStateToProps, personalInfo)(Portfolio);","map":{"version":3,"sources":["/Volumes/STORAGE/GitHub/portfolio-site/Frontend-React/src/containers/portfolio/portfolio.js"],"names":["React","Component","axios","Nav","GoGitBranch","connect","personalInfo","Footer","Loader","Portfolio","constructor","renderLoader","state","loader","renderRepos","gitData","reverse","map","repo","id","html_url","name","language","Date","pushed_at","toUTCString","slice","default_branch","description","componentDidMount","gitApiLink","props","get","then","data","setState","catch","error","console","log","render","mapStateToProps"],"mappings":"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","sourcesContent":["// Default imports\nimport React, {Component} from 'react';\n\n// Custom imports\nimport axios from 'axios';\nimport './portfolio.css';\nimport Nav from '../navbar/navbar';\nimport {GoGitBranch} from \"react-icons/go\";\nimport {connect} from 'react-redux';\nimport * as personalInfo from '../../actions/action';\nimport Footer from \"../../components/footer/footer\";\nimport Loader from \"../../components/loader/loader\";\n\nclass Portfolio extends Component {\n    // default constructor\n    constructor() {\n        super();\n        this.state = {\n            gitData: [],\n            loader: true\n        }\n    };\n\n    // Form load\n    componentDidMount() {\n        const {gitApiLink} = this.props.personalInfo;\n        // Get data from github api here\n        axios\n            .get(gitApiLink)\n            .then(data => this.setState({gitData: data.data, loader: false}))\n            .catch(error => console.log(error));\n    };\n\n    renderLoader = () => {\n        if (this.state.loader) {\n            return (\n                <Loader/>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    renderRepos = () => {\n        return this.state.gitData\n            .reverse()\n            .map(repo => (\n                // Html build here\n                <div className='card hoverable large' id={repo.id}>\n                    <div className='card-content'>\n                        <a href={repo.html_url} className=\"card-title\">{repo.name}</a>\n                        <i className=\"material-icons right\">more_vert</i>\n                        <div className=\"card-action\">\n                            <span className='blue-text'>{repo.language}</span>\n                            <span> • Latest commit at: {new Date(repo.pushed_at).toUTCString().slice(0, 25)}</span>\n                            <span className='right'>\n                                {repo.default_branch}\n                                <GoGitBranch size={14}/>\n                        </span>\n                        </div>\n                    </div>\n                    <div className='card-reveal'>\n                        <p>{repo.description}</p>\n                    </div>\n                </div>\n            ));\n    };\n\n    render() {\n        return (\n            // HTML here\n            <div>\n                <Nav/>\n                {this.renderLoader()}\n                <div className='container'>\n                    <div className=\"section\">\n                        <div className='row'>\n                            <h4>My Projects</h4>\n                        </div>\n                    </div>\n                    <div className=\"divider\"></div>\n                    {this.renderRepos()}\n                    <Footer/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n};\n\n// Default export\nexport default connect(mapStateToProps, personalInfo)(Portfolio);\n"]},"metadata":{},"sourceType":"module"}