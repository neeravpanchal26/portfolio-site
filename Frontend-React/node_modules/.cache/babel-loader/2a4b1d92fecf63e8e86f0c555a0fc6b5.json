{"ast":null,"code":"var _jsxFileName = \"/Volumes/STORAGE/GitHub/portfolio-site/Frontend-React/src/containers/portfolio/portfolio.js\";\n// Default imports\nimport React, { Component } from 'react'; // Custom imports\n\nimport axios from 'axios';\nimport './portfolio.css';\nimport Nav from '../navbar/navbar';\nimport { GoGitBranch, GoRepo } from \"react-icons/go\";\nimport { connect } from 'react-redux';\nimport * as personalInfo from '../../actions/action';\nimport Footer from \"../../components/footer/footer\";\nimport Loader from \"../../components/loader/loader\";\nimport Modal from \"../../components/modal/modal\";\n\nclass Portfolio extends Component {\n  // default constructor\n  constructor() {\n    super();\n\n    this.renderLoader = () => {\n      if (this.state.loader) {\n        return /*#__PURE__*/React.createElement(Loader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.renderRepos = () => {\n      const {\n        gitData\n      } = this.state;\n\n      if (gitData[0]) {\n        const dt = new Date(gitData[0].pushed_at).toLocaleString('en-ZA');\n        console.log(new Date(dt).toUTCString());\n      }\n\n      return gitData.sort((a, b) => new Date(b.pushed_at) - new Date(a.pushed_at)).map(repo =>\n      /*#__PURE__*/\n      // Html build here\n      React.createElement(\"div\", {\n        className: \"col s12 m6 l4\",\n        id: repo.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons right modal-trigger\",\n        \"data-target\": repo.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, \"more_horiz\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-image center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"letter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, repo.language.slice(0, 1)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }), repo.language), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }\n      }, repo.name), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, \"Latest commit:\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 49\n        }\n      }), new Date(repo.pushed_at).toUTCString().slice(0, 25)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: repo.html_url,\n        className: \"blue-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(GoRepo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 79\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, repo.default_branch, /*#__PURE__*/React.createElement(GoGitBranch, {\n        size: 14,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 78\n        }\n      })))), /*#__PURE__*/React.createElement(Modal, {\n        ID: repo.name,\n        Heading: repo.name,\n        Content: repo.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }))));\n    };\n\n    this.state = {\n      gitData: [],\n      loader: true\n    };\n  }\n\n  // Form load\n  componentDidMount() {\n    const {\n      gitApiLink\n    } = this.props.personalInfo; // Get data from github api here\n\n    axios.get(gitApiLink).then(data => this.setState({\n      gitData: data.data,\n      loader: false\n    })).catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // HTML here\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), this.renderLoader(), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, \"My Projects\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"divider\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, this.renderRepos())), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return state;\n}; // Default export\n\n\nexport default connect(mapStateToProps, personalInfo)(Portfolio);","map":{"version":3,"sources":["/Volumes/STORAGE/GitHub/portfolio-site/Frontend-React/src/containers/portfolio/portfolio.js"],"names":["React","Component","axios","Nav","GoGitBranch","GoRepo","connect","personalInfo","Footer","Loader","Modal","Portfolio","constructor","renderLoader","state","loader","renderRepos","gitData","dt","Date","pushed_at","toLocaleString","console","log","toUTCString","sort","a","b","map","repo","id","name","language","slice","html_url","default_branch","description","componentDidMount","gitApiLink","props","get","then","data","setState","catch","error","render","mapStateToProps"],"mappings":"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","sourcesContent":["// Default imports\nimport React, {Component} from 'react';\n\n// Custom imports\nimport axios from 'axios';\nimport './portfolio.css';\nimport Nav from '../navbar/navbar';\nimport {GoGitBranch, GoRepo} from \"react-icons/go\";\nimport {connect} from 'react-redux';\nimport * as personalInfo from '../../actions/action';\nimport Footer from \"../../components/footer/footer\";\nimport Loader from \"../../components/loader/loader\";\nimport Modal from \"../../components/modal/modal\";\n\nclass Portfolio extends Component {\n    // default constructor\n    constructor() {\n        super();\n        this.state = {\n            gitData: [],\n            loader: true\n        }\n    };\n\n    // Form load\n    componentDidMount() {\n        const {gitApiLink} = this.props.personalInfo;\n        // Get data from github api here\n        axios\n            .get(gitApiLink)\n            .then(data => this.setState({gitData: data.data, loader: false}))\n            .catch(error => console.log(error));\n    };\n\n    renderLoader = () => {\n        if (this.state.loader) {\n            return (\n                <Loader/>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    renderRepos = () => {\n        const {gitData} = this.state;\n        if(gitData[0]){\n            const dt = new Date(gitData[0].pushed_at).toLocaleString('en-ZA');\n            console.log(new Date(dt).toUTCString());\n        }\n        return gitData\n            .sort((a, b) => new Date(b.pushed_at) - new Date(a.pushed_at))\n            .map(repo => (\n                // Html build here\n                <div className='col s12 m6 l4' id={repo.id}>\n                    <div className='card'>\n                        <div className=\"card-content\">\n                            <i className=\"material-icons right modal-trigger\" data-target={repo.name}>more_horiz</i>\n                        </div>\n                        <div className='card-image center'>\n                            <span className='letter'>{repo.language.slice(0, 1)}</span>\n                            <br/>\n                            {repo.language}\n                        </div>\n                        <div className='card-content'>\n                            <span className=\"card-title\">{repo.name}</span>\n                            <span>Latest commit:<br/>{new Date(repo.pushed_at).toUTCString().slice(0, 25)}\n                            </span>\n                            <div className=\"card-action\">\n                                <a href={repo.html_url} className='blue-text'><GoRepo/></a>\n                                <span className='right'>{repo.default_branch}<GoGitBranch size={14}/></span>\n                            </div>\n                        </div>\n                        <Modal ID={repo.name} Heading={repo.name} Content={repo.description}/>\n                    </div>\n                </div>\n            ));\n    };\n\n    render() {\n        return (\n            // HTML here\n            <div>\n                <Nav/>\n                {this.renderLoader()}\n                <div className='container'>\n                    <div className=\"section\">\n                        <div className='row'>\n                            <h4>My Projects</h4>\n                        </div>\n                    </div>\n                    <div className=\"divider\"></div>\n                    <div className='row'>{this.renderRepos()}</div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n};\n\n// Default export\nexport default connect(mapStateToProps, personalInfo)(Portfolio);\n"]},"metadata":{},"sourceType":"module"}